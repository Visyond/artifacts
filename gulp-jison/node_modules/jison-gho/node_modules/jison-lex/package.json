{
  "author": {
    "name": "Zach Carter",
    "email": "zach@carter.name",
    "url": "http://zaa.ch"
  },
  "name": "jison-lex",
  "description": "lexical analyzer generator used by jison",
  "license": "MIT",
  "version": "0.3.4-181",
  "keywords": [
    "jison",
    "parser",
    "generator",
    "lexer",
    "flex",
    "tokenizer"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/zaach/jison-lex.git"
  },
  "bugs": {
    "url": "http://github.com/zaach/jison-lex/issues",
    "email": "jison@librelist.com"
  },
  "main": "./regexp-lexer.js",
  "bin": {
    "jison-lex": "./cli.js"
  },
  "engines": {
    "node": ">=4.0"
  },
  "dependencies": {
    "json5": "0.5.1",
    "lex-parser": "github:gerhobbelt/lex-parser#master",
    "nomnom": "github:gerhobbelt/nomnom#master",
    "xregexp": "github:gerhobbelt/xregexp#master"
  },
  "devDependencies": {
    "chai": "4.0.2",
    "mocha": "3.4.2"
  },
  "scripts": {
    "test": "make test",
    "build": "make"
  },
  "directories": {
    "lib": "lib",
    "tests": "tests"
  },
  "homepage": "http://jison.org",
  "gitHead": "4aff436dadeb981edf9fa94df44192f9ce89e92a",
  "readme": "# jison-lex\n\n\n[![build status](https://secure.travis-ci.org/GerHobbelt/jison-lex.png)](http://travis-ci.org/GerHobbelt/jison-lex)\n\n\nA lexical analyzer generator used by [jison](http://jison.org). It takes a lexical grammar definition (either in JSON or Bison's lexical grammar format) and outputs a JavaScript lexer.\n\n\n## install\n\nnpm install jison-lex\n\n\n## build\n\nTo build the lexer generator yourself, clone the git repo then run:\n\n    make prep\n    \nto install required packages and then run:\n\n    make\n    \nto run the unit tests.\n\n\n## usage\n\n```\nUsage: jison-lex [file] [options]\n\nfile     file containing a lexical grammar\n\nOptions:\n   -o FILE, --outfile FILE       Filename and base module name of the generated parser\n   -t TYPE, --module-type TYPE   The type of module to generate (commonjs, js)\n   --version                     print version and exit\n```\n\n\n## programmatic usage\n\n```\nvar JisonLex = require('jison-lex');\n\nvar grammar = {\n  rules: [\n    [\"x\", \"return 'X';\" ],\n    [\"y\", \"return 'Y';\" ],\n    [\"$\", \"return 'EOF';\" ]\n  ]\n};\n\n// or load from a file\n// var grammar = fs.readFileSync('mylexer.l', 'utf8');\n\n// generate source\nvar lexerSource = JisonLex.generate(grammar);\n\n// or create a parser in memory\nvar lexer = new JisonLex(grammar);\nlexer.setInput('xyxxy');\nlexer.lex();\n// => 'X'\nlexer.lex();\n// => 'Y'\n\n\n## license\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "jison-lex@0.3.4-181",
  "_shasum": "cd72569b78fc0604ff19abd8ca1b8c2503bbcce5",
  "_from": "gerhobbelt/jison-lex#master",
  "_resolved": "git://github.com/gerhobbelt/jison-lex.git#4aff436dadeb981edf9fa94df44192f9ce89e92a"
}
